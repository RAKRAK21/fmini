{"ast":null,"code":"var _jsxFileName = \"/Users/choihyungrak/Desktop/frontmini/todolist/src/components/calendar/Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CalendarHead from './CalendarHead';\nimport CalendarBody from './CalendarBody';\nimport TodoModal from './TodoModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [todos, setTodos] = useState([]);\n  const handleDateClick = date => {\n    setSelectedDate(date);\n    setModalOpen(true);\n    const dateKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`; // toISOString()은 UTC 기준으로 날짜를 반환하므로, 로컬 시간에 맞도록 해주어야 한다.\n    const savedTodos = JSON.parse(localStorage.getItem(dateKey)) || [];\n    setTodos(savedTodos);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container flex flex-col items-center w-full max-w-4xl mx-auto h-full min-h-[800px]\",\n    children: [/*#__PURE__*/_jsxDEV(CalendarHead, {\n      currentDate: currentDate,\n      setCurrentDate: setCurrentDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarBody, {\n      currentDate: currentDate,\n      onDateClick: handleDateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoModal, {\n      isOpen: modalOpen,\n      onClose: handleCloseModal,\n      date: selectedDate,\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"P98XlsT6dFlPvgkGJLFL2mUUzwg=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","CalendarHead","CalendarBody","TodoModal","jsxDEV","_jsxDEV","Calendar","_s","currentDate","setCurrentDate","Date","selectedDate","setSelectedDate","modalOpen","setModalOpen","todos","setTodos","handleDateClick","date","dateKey","getFullYear","String","getMonth","padStart","getDate","savedTodos","JSON","parse","localStorage","getItem","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDateClick","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/choihyungrak/Desktop/frontmini/todolist/src/components/calendar/Calendar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CalendarHead from './CalendarHead';\nimport CalendarBody from './CalendarBody';\nimport TodoModal from './TodoModal';\n\nconst Calendar = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [todos, setTodos] = useState([]);\n\n  const handleDateClick = (date) => {\n    setSelectedDate(date);\n    setModalOpen(true);\n    const dateKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`; // toISOString()은 UTC 기준으로 날짜를 반환하므로, 로컬 시간에 맞도록 해주어야 한다.\n    const savedTodos = JSON.parse(localStorage.getItem(dateKey)) || [];\n    setTodos(savedTodos);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  }\n\n  return (\n    <div className=\"calendar-container flex flex-col items-center w-full max-w-4xl mx-auto h-full min-h-[800px]\">\n      <CalendarHead currentDate={currentDate} setCurrentDate={setCurrentDate} />\n      <CalendarBody currentDate={currentDate} onDateClick={handleDateClick}/>\n      <TodoModal\n        isOpen={modalOpen}\n        onClose={handleCloseModal}\n        date={selectedDate}\n        todos={todos}\n      />\n    </div>\n  );\n};\n\nexport default Calendar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAIU,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMiB,eAAe,GAAIC,IAAI,IAAK;IAChCN,eAAe,CAACM,IAAI,CAAC;IACrBJ,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMK,OAAO,GAAG,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,IAAIC,MAAM,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,MAAM,CAACH,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;IACpI,MAAME,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACV,OAAO,CAAC,CAAC,IAAI,EAAE;IAClEH,QAAQ,CAACS,UAAU,CAAC;EACtB,CAAC;EAED,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7BhB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACET,OAAA;IAAK0B,SAAS,EAAC,6FAA6F;IAAAC,QAAA,gBAC1G3B,OAAA,CAACJ,YAAY;MAACO,WAAW,EAAEA,WAAY;MAACC,cAAc,EAAEA;IAAe;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1E/B,OAAA,CAACH,YAAY;MAACM,WAAW,EAAEA,WAAY;MAAC6B,WAAW,EAAEpB;IAAgB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvE/B,OAAA,CAACF,SAAS;MACRmC,MAAM,EAAEzB,SAAU;MAClB0B,OAAO,EAAET,gBAAiB;MAC1BZ,IAAI,EAAEP,YAAa;MACnBI,KAAK,EAAEA;IAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA9BID,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}