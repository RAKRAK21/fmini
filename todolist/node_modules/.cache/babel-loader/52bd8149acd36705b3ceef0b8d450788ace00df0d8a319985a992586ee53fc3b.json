{"ast":null,"code":"var _jsxFileName = \"/Users/choihyungrak/Desktop/frontmini/todolist/src/components/Todocreate.jsx\",\n  _s = $RefreshSig$();\n// src/components/Todocreate.jsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todocreate = ({\n  addTodo\n}) => {\n  _s();\n  const [newTodo, setNewTodo] = useState(''); // 새로운 할 일의 텍스트를 저장할 상태\n\n  // 폼 제출 시 호출되는 함수\n  const handleSubmit = e => {\n    e.preventDefault(); // 폼의 기본 동작을 막음\n    if (newTodo.trim()) {\n      addTodo(newTodo); // 새로운 할 일을 추가하는 함수 호출\n      setNewTodo(''); // 입력 필드 초기화\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flex mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"border p-2 flex-grow \",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Add a new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-gray-800 text-white p-2 ml-2\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Todocreate, \"pTGhIS2rvFqJ3N696KH6pV6+hcU=\");\n_c = Todocreate;\nexport default Todocreate;\nvar _c;\n$RefreshReg$(_c, \"Todocreate\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todocreate","addTodo","_s","newTodo","setNewTodo","handleSubmit","e","preventDefault","trim","onSubmit","className","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/choihyungrak/Desktop/frontmini/todolist/src/components/Todocreate.jsx"],"sourcesContent":["// src/components/Todocreate.jsx\nimport React, { useState } from 'react';\n\nconst Todocreate = ({ addTodo }) => {\n  const [newTodo, setNewTodo] = useState(''); // 새로운 할 일의 텍스트를 저장할 상태\n\n  // 폼 제출 시 호출되는 함수\n  const handleSubmit = (e) => {\n    e.preventDefault(); // 폼의 기본 동작을 막음\n    if (newTodo.trim()) {\n      addTodo(newTodo); // 새로운 할 일을 추가하는 함수 호출\n      setNewTodo(''); // 입력 필드 초기화\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"flex mb-4\">\n      {/* 새로운 할 일의 텍스트를 입력하는 필드 */}\n      <input\n        type=\"text\"\n        className=\"border p-2 flex-grow \"\n        value={newTodo}\n        onChange={(e) => setNewTodo(e.target.value)}\n        placeholder=\"Add a new task\"\n      />\n      {/* 추가 버튼 */}\n      <button type=\"submit\" className=\"bg-gray-800 text-white p-2 ml-2\">\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default Todocreate;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,IAAIJ,OAAO,CAACK,IAAI,CAAC,CAAC,EAAE;MAClBP,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC;MAClBC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,oBACEL,OAAA;IAAMU,QAAQ,EAAEJ,YAAa;IAACK,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAEjDZ,OAAA;MACEa,IAAI,EAAC,MAAM;MACXF,SAAS,EAAC,uBAAuB;MACjCG,KAAK,EAAEV,OAAQ;MACfW,QAAQ,EAAGR,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eAEFrB,OAAA;MAAQa,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,iCAAiC;MAAAC,QAAA,EAAC;IAElE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAClB,EAAA,CA5BIF,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}