{"ast":null,"code":"var _jsxFileName = \"/Users/choihyungrak/Desktop/frontmini/todolist/src/firebase/Auth.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { authService } from '../firebase/fbInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n  const toggleAccount = () => setNewAccount(prev => !prev);\n  const onChange = e => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = e;\n    if (name === \"email\") setEmail(value);else if (name === \"password\") setPassword(value);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    let data;\n    try {\n      if (newAccount) data = await createUserWithEmailAndPassword(authService, email, password);else data = await signInWithEmailAndPassword(authService, email, password);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"회원가입\" : \"로그인\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      children: newAccount ? \"회원가입\" : \"로그인\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Auth, \"PWGRenf/8eTSfFFIHM+Y9k6hNSo=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","authService","jsxDEV","_jsxDEV","Auth","_s","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","toggleAccount","prev","onChange","e","target","name","value","onSubmit","preventDefault","data","message","children","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/choihyungrak/Desktop/frontmini/todolist/src/firebase/Auth.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { authService } from '../firebase/fbInstance';\n\nconst Auth = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState('');\n\n    const toggleAccount = () => setNewAccount((prev) => !prev)\n    const onChange = (e) => {\n        const { target: { name, value } } = e;\n        if (name === \"email\") setEmail(value);\n        else if (name === \"password\") setPassword(value);\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        let data ;\n        try {\n            if(newAccount) data = await createUserWithEmailAndPassword(authService, email, password);\n            else data = await signInWithEmailAndPassword(authService, email, password);\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input\n                    name=\"email\"\n                    type=\"text\"\n                    placeholder='Email'\n                    required\n                    value={email}\n                    onChange={onChange} />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange} />\n                <input\n                    type=\"submit\"\n                    value={newAccount? \"회원가입\" : \"로그인\"} />\n            </form>\n            <span onClick={toggleAccount}>{newAccount? \"회원가입\" : \"로그인\"}</span>\n            {/* <div>\n                <button name=\"Google\">Google 로그인</button>\n                <button name=\"Github\">GitHub 로그인</button>\n            </div> */}\n        </div>\n    )\n}\n\nexport default Auth"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}