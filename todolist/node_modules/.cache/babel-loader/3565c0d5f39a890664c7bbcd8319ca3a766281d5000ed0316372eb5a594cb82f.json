{"ast":null,"code":"var _jsxFileName = \"/Users/choihyungrak/Desktop/frontmini/todolist/src/components/Todolist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { dbService, authService } from '../firebase/fbInstance';\nimport Todohead from './Todohead';\nimport Todocreate from './Todocreate';\nimport Todoitem from './Todoitem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todolist = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  useEffect(() => {\n    const fetchTodos = async () => {\n      if (authService.currentUser) {\n        const q = query(collection(dbService, \"todos\"), where(\"userId\", \"==\", authService.currentUser.uid), where(\"date\", \"==\", currentDate.toISOString().split('T')[0]));\n        const querySnapshot = await getDocs(q);\n        const fetchedTodos = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setTodos(fetchedTodos);\n      }\n    };\n    fetchTodos();\n\n    // 매일 자정에 날짜 변경 체크\n    const checkDateChange = () => {\n      const now = new Date();\n      if (now.toDateString() !== currentDate.toDateString()) {\n        setCurrentDate(now);\n      }\n    };\n    const intervalId = setInterval(checkDateChange, 60000); // 1분마다 체크\n\n    return () => clearInterval(intervalId);\n  }, [currentDate]);\n  const addTodo = async text => {\n    const newTodo = {\n      text,\n      completed: false,\n      userId: authService.currentUser.uid,\n      date: currentDate.toISOString().split('T')[0]\n    };\n    const docRef = await addDoc(collection(dbService, \"todos\"), newTodo);\n    setTodos([...todos, {\n      id: docRef.id,\n      ...newTodo\n    }]);\n  };\n  const toggleTodo = async id => {\n    const todoToToggle = todos.find(todo => todo.id === id);\n    await updateDoc(doc(dbService, \"todos\", id), {\n      completed: !todoToToggle.completed\n    });\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  const removeTodo = async id => {\n    await deleteDoc(doc(dbService, \"todos\", id));\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const updateTodo = async (id, newText) => {\n    await updateDoc(doc(dbService, \"todos\", id), {\n      text: newText\n    });\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      text: newText\n    } : todo));\n  };\n\n  // 날짜 변경 함수 추가\n  const changeDate = amount => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + amount);\n    setCurrentDate(newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Todohead, {\n      currentDate: currentDate,\n      onPrevDay: () => changeDate(-1),\n      onNextDay: () => changeDate(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md p-4 bg-gray-100 rounded-lg shadow-md mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Todocreate, {\n          addTodo: addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todoitem, {\n            todo: todo,\n            toggleTodo: () => toggleTodo(todo.id),\n            removeTodo: () => removeTodo(todo.id),\n            updateTodo: newText => updateTodo(todo.id, newText)\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Todolist, \"8zzaQMzRZ7KXK2hh0RGtyxNZnZ0=\");\n_c = Todolist;\nexport default Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","useEffect","collection","query","where","getDocs","addDoc","updateDoc","deleteDoc","doc","dbService","authService","Todohead","Todocreate","Todoitem","jsxDEV","_jsxDEV","Fragment","_Fragment","Todolist","_s","todos","setTodos","currentDate","setCurrentDate","Date","fetchTodos","currentUser","q","uid","toISOString","split","querySnapshot","fetchedTodos","docs","map","id","data","checkDateChange","now","toDateString","intervalId","setInterval","clearInterval","addTodo","text","newTodo","completed","userId","date","docRef","toggleTodo","todoToToggle","find","todo","removeTodo","filter","updateTodo","newText","changeDate","amount","newDate","setDate","getDate","children","onPrevDay","onNextDay","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/choihyungrak/Desktop/frontmini/todolist/src/components/Todolist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { dbService, authService } from '../firebase/fbInstance';\nimport Todohead from './Todohead';\nimport Todocreate from './Todocreate';\nimport Todoitem from './Todoitem';\n\nconst Todolist = () => {\n  const [todos, setTodos] = useState([]);\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      if (authService.currentUser) {\n        const q = query(\n          collection(dbService, \"todos\"),\n          where(\"userId\", \"==\", authService.currentUser.uid),\n          where(\"date\", \"==\", currentDate.toISOString().split('T')[0])\n        );\n        const querySnapshot = await getDocs(q);\n        const fetchedTodos = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setTodos(fetchedTodos);\n      }\n    };\n\n    fetchTodos();\n\n    // 매일 자정에 날짜 변경 체크\n    const checkDateChange = () => {\n      const now = new Date();\n      if (now.toDateString() !== currentDate.toDateString()) {\n        setCurrentDate(now);\n      }\n    };\n\n    const intervalId = setInterval(checkDateChange, 60000); // 1분마다 체크\n\n    return () => clearInterval(intervalId);\n  }, [currentDate]);\n\n  const addTodo = async (text) => {\n    const newTodo = {\n      text,\n      completed: false,\n      userId: authService.currentUser.uid,\n      date: currentDate.toISOString().split('T')[0]\n    };\n    const docRef = await addDoc(collection(dbService, \"todos\"), newTodo);\n    setTodos([...todos, { id: docRef.id, ...newTodo }]);\n  };\n\n  const toggleTodo = async (id) => {\n    const todoToToggle = todos.find(todo => todo.id === id);\n    await updateDoc(doc(dbService, \"todos\", id), {\n      completed: !todoToToggle.completed\n    });\n    setTodos(todos.map(todo => \n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    ));\n  };\n\n  const removeTodo = async (id) => {\n    await deleteDoc(doc(dbService, \"todos\", id));\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const updateTodo = async (id, newText) => {\n    await updateDoc(doc(dbService, \"todos\", id), { text: newText });\n    setTodos(todos.map(todo => \n      todo.id === id ? { ...todo, text: newText } : todo\n    ));\n  };\n\n  // 날짜 변경 함수 추가\n  const changeDate = (amount) => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + amount);\n    setCurrentDate(newDate);\n  };\n\n  return (\n    <>\n      <Todohead \n        currentDate={currentDate} \n        onPrevDay={() => changeDate(-1)}\n        onNextDay={() => changeDate(1)}\n      />\n      <div className=\"flex flex-col items-center\">\n        <div className=\"w-full max-w-md p-4 bg-gray-100 rounded-lg shadow-md mt-4\">\n          <Todocreate addTodo={addTodo} />\n          <ul>\n            {todos.map((todo) => (\n              <Todoitem\n                key={todo.id}\n                todo={todo}\n                toggleTodo={() => toggleTodo(todo.id)}\n                removeTodo={() => removeTodo(todo.id)}\n                updateTodo={(newText) => updateTodo(todo.id, newText)}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Todolist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}