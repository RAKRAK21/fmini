{"ast":null,"code":"var _jsxFileName = \"/Users/choihyungrak/Desktop/frontmini/todolist/src/components/Todoitem.jsx\",\n  _s = $RefreshSig$();\n// src/components/Todoitem.jsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todoitem = ({\n  todo,\n  toggleTodo,\n  removeTodo,\n  updateTodo\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false); // 수정 모드 상태를 저장\n  const [newText, setNewText] = useState(todo.text); // 수정할 할 일 텍스트를 저장\n\n  // 수정 모드로 전환하는 함수\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  // 수정된 내용을 저장하고 수정 모드를 종료하는 함수\n  const handleSave = () => {\n    updateTodo(newText); // 부모 컴포넌트에 수정된 텍스트를 전달\n    setIsEditing(false);\n  };\n\n  // 수정 모드를 취소하고 원래 텍스트로 되돌리는 함수\n  const handleCancel = () => {\n    setNewText(todo.text); // 수정 전 텍스트로 되돌림\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"flex items-center justify-between mb-2 p-2 bg-white shadow rounded\",\n    children: isEditing ?\n    /*#__PURE__*/\n    // 수정 모드일 때\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newText,\n        onChange: e => setNewText(e.target.value),\n        className: \"border p-2 flex-grow mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-500 text-white p-2 mr-2\",\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-gray-500 text-white p-2\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // 일반 모드일 때\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.completed,\n        onChange: toggleTodo,\n        className: \"mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `flex-grow ${todo.completed ? 'line-through' : ''}`,\n        onClick: toggleTodo,\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white p-2 mr-2\",\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-red-700 text-white p-2\",\n        onClick: removeTodo,\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Todoitem, \"eZUix1xPGB4jfU40YWi+U7Y2RLs=\");\n_c = Todoitem;\nexport default Todoitem;\nvar _c;\n$RefreshReg$(_c, \"Todoitem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Todoitem","todo","toggleTodo","removeTodo","updateTodo","_s","isEditing","setIsEditing","newText","setNewText","text","handleEdit","handleSave","handleCancel","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","completed","_c","$RefreshReg$"],"sources":["/Users/choihyungrak/Desktop/frontmini/todolist/src/components/Todoitem.jsx"],"sourcesContent":["// src/components/Todoitem.jsx\nimport React, { useState } from 'react';\n\nconst Todoitem = ({ todo, toggleTodo, removeTodo, updateTodo }) => {\n  const [isEditing, setIsEditing] = useState(false); // 수정 모드 상태를 저장\n  const [newText, setNewText] = useState(todo.text); // 수정할 할 일 텍스트를 저장\n\n  // 수정 모드로 전환하는 함수\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  // 수정된 내용을 저장하고 수정 모드를 종료하는 함수\n  const handleSave = () => {\n    updateTodo(newText); // 부모 컴포넌트에 수정된 텍스트를 전달\n    setIsEditing(false);\n  };\n\n  // 수정 모드를 취소하고 원래 텍스트로 되돌리는 함수\n  const handleCancel = () => {\n    setNewText(todo.text); // 수정 전 텍스트로 되돌림\n    setIsEditing(false);\n  };\n\n  return (\n    <li className=\"flex items-center justify-between mb-2 p-2 bg-white shadow rounded\">\n      {isEditing ? (\n        // 수정 모드일 때\n        <>\n          <input\n            type=\"text\"\n            value={newText}\n            onChange={(e) => setNewText(e.target.value)}\n            className=\"border p-2 flex-grow mr-2\"\n          />\n          <button className=\"bg-green-500 text-white p-2 mr-2\" onClick={handleSave}>\n            Save\n          </button>\n          <button className=\"bg-gray-500 text-white p-2\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </>\n      ) : (\n        // 일반 모드일 때\n        <>\n          <input\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={toggleTodo}\n            className=\"mr-2\"\n          />\n          <span\n            className={`flex-grow ${todo.completed ? 'line-through' : ''}`}\n            onClick={toggleTodo}\n          >\n            {todo.text}\n          </span>\n          <button className=\"bg-blue-500 text-white p-2 mr-2\" onClick={handleEdit}>\n            Edit\n          </button>\n          <button className=\"bg-red-700 text-white p-2\" onClick={removeTodo}>\n            Remove\n          </button>\n        </>\n      )}\n    </li>\n  );\n};\n\nexport default Todoitem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}